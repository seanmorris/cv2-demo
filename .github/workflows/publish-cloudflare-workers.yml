name: Publish Cloudflare Workers

on:
  push:
    branches:
      - '**'

    paths:
      - .cloudflare/workers/**
      - .github/workflows/publish-cloudflare-workers.yml

jobs:
  publish-workers:
    name:    Publish Github Auth Worker
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Checking Existing Worker
        run: >
          set -eux
          curl https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/workers/scripts/$SCRIPT_NAME -H "Authorization: Bearer $CF_API_TOKEN"
        env:
          SCRIPT_NAME:   curvature-demo-event-source
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Set up terraform
        run: >
          set -eux;
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -;
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main";
          sudo apt-get update;
          sudo apt-get install terraform;

      - name: Delete Existing Worker
        run: >
          set -eux;
          curl -X DELETE https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/workers/scripts/$SCRIPT_NAME -H "Authorization: Bearer $CF_API_TOKEN";
        env:
          SCRIPT_NAME:   curvature-demo-event-source
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Deploy
        working-directory: .cloudflare/workers
        run: >
          set -eux;
          find -mindepth 1 -type d | while read DIR; do { cd $DIR && {
            terraform init;
            terraform plan;
            terraform apply --auto-approve;
          } }; done;
        env:
          TF_VAR_CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          TF_VAR_CLOUDFLARE_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_CLOUDFLARE_HOSTNAME:   ${{ secrets.CLOUDFLARE_HOSTNAME }}
          TF_VAR_CLOUDFLARE_ZONE_ID:    ${{ secrets.CLOUDFLARE_ZONE_ID }}
